{"ast":null,"code":"import _defineProperty from \"/Users/vanes/Desktop/dailyTipOut/tipoutapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/vanes/Desktop/dailyTipOut/tipoutapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vanes/Desktop/dailyTipOut/tipoutapp/src/components/TipForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst TipForm = props => {\n  const ranges = [{\n    value: '.15',\n    label: '15%'\n  }, {\n    value: '.2',\n    label: '20%'\n  }, {\n    value: '.25',\n    label: '25%'\n  }];\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    margin: {\n      margin: theme.spacing(1)\n    },\n    textField: {\n      flexBasis: 200\n    }\n  }));\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        id = _React$useState2[0],\n        setId = _React$useState2[1];\n\n  const _React$useState3 = React.useState(new Date('2014-08-18T21:11:54')),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        date = _React$useState4[0],\n        setDate = _React$useState4[1];\n\n  const onIdInput = e => {\n    setId(e.target.value);\n  };\n\n  const onDateInput = date => {\n    setDate(date);\n  };\n\n  const _React$useState5 = React.useState({\n    tipAmount: '',\n    savingsRate: '',\n    amountSaved: ''\n  }),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        values = _React$useState6[0],\n        setValues = _React$useState6[1];\n\n  const handleChange = prop => event => {\n    setValues(_objectSpread({}, values, {\n      [prop]: event.target.value\n    }));\n  };\n\n  const handleCreateTip = () => {\n    fetch(\"http://localhost:8080/tip\", {\n      method: 'post',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: date,\n        tipAmount: tipAmount,\n        savingsRate: savingsRate,\n        amountSaved: amountSaved\n      })\n    }).then(() => {\n      props.fetchTips();\n      setDate(\"\");\n      setTipAmount(\"\");\n      setSavingsRate(\"\");\n      setAmountSaved(\"\");\n      props.history.push('/tips');\n    });\n  };\n\n  const handleUpdateTip = () => {\n    fetch(\"http://localhost:8080/tip/\" + id, {\n      method: 'put',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: date,\n        tipAmount: tipAmount,\n        savingsRate: savingsRate,\n        amountSaved: amountSaved\n      })\n    }).then(() => {\n      props.fetchTips();\n      setId(0);\n      setDate(\"\");\n      setTipAmount(\"\");\n      setSavingsRate(\"\");\n      setAmountSaved(\"\");\n      props.history.push('/tips');\n    });\n  };\n\n  React.useEffect(() => {\n    let id = props.match ? props.match.params.id : 0;\n    setId(id);\n  }, []);\n  let buttonAction;\n\n  if (id) {\n    buttonAction = React.createElement(\"button\", {\n      onClick: handleUpdateTip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Update Tip\");\n  } else {\n    buttonAction = React.createElement(\"button\", {\n      onClick: handleCreateTip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Add Tip\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    margin: \"normal\",\n    id: \"date-picker-dialog\",\n    label: \"Date picker dialog\",\n    format: \"MM/dd/yyyy\",\n    value: date,\n    onChange: onDateInput,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }))), React.createElement(TextField, {\n    id: \"outlined-adornment-amount\",\n    className: clsx(classes.margin, classes.textField),\n    variant: \"outlined\",\n    label: \"Tip Amount\",\n    value: values.tipAmount,\n    onChange: handleChange('tipAmount'),\n    InputProps: {\n      startAdornment: React.createElement(InputAdornment, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"$\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    select: true,\n    className: clsx(classes.margin, classes.textField),\n    variant: \"outlined\",\n    label: \"Savings Rate\",\n    value: values.savingsRate,\n    onChange: handleChange('savingsRate'),\n    InputProps: {\n      startAdornment: React.createElement(InputAdornment, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"%\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, ranges.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, option.label))), React.createElement(TextField, {\n    id: \"outlined-adornment-amount\",\n    className: clsx(classes.margin, classes.textField),\n    variant: \"outlined\",\n    label: \"Amount to Save\",\n    InputProps: {\n      startAdornment: React.createElement(InputAdornment, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"$\", Math.ceil(values.tipAmount * values.savingsRate))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-adornment-amount\",\n    className: clsx(classes.margin, classes.textField),\n    variant: \"outlined\",\n    label: \"Actual Amount Saved\",\n    value: values.amountSaved,\n    onChange: handleChange('amount'),\n    InputProps: {\n      startAdornment: React.createElement(InputAdornment, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"$\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  })), \");\", buttonAction);\n};\n\nexport default TipForm;","map":{"version":3,"sources":["/Users/vanes/Desktop/dailyTipOut/tipoutapp/src/components/TipForm.js"],"names":["React","Grid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","clsx","makeStyles","InputAdornment","TextField","MenuItem","TipForm","props","ranges","value","label","useStyles","theme","root","display","flexWrap","margin","spacing","textField","flexBasis","classes","useState","id","setId","Date","date","setDate","onIdInput","e","target","onDateInput","tipAmount","savingsRate","amountSaved","values","setValues","handleChange","prop","event","handleCreateTip","fetch","method","headers","body","JSON","stringify","then","fetchTips","setTipAmount","setSavingsRate","setAmountSaved","history","push","handleUpdateTip","useEffect","match","params","buttonAction","startAdornment","map","option","Math","ceil"],"mappings":"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","sourcesContent":["import React from 'react'\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\n\nconst TipForm=(props)=>{\n  const ranges = [\n    {\n      value: '.15',\n      label: '15%',\n    },\n    {\n      value: '.2',\n      label: '20%',\n    },\n    {\n      value: '.25',\n      label: '25%',\n    },\n  ];\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    textField: {\n      flexBasis: 200,\n    },\n  }));\n\n  const classes = useStyles();\n\n  const [id, setId] = React.useState(0);\n  const [date, setDate] = React.useState(new Date('2014-08-18T21:11:54'));\n\n  const onIdInput=(e)=>{\n    setId(e.target.value);\n  }\n  const onDateInput=(date)=>{\n    setDate(date);\n  }\n\n    const [values, setValues] = React.useState({\n      tipAmount:'',\n      savingsRate:'',\n      amountSaved:''\n    });\n\n    const handleChange = prop => event => {\n      setValues({ ...values, [prop]: event.target.value });\n    };\n\n  const handleCreateTip=()=>{\n    fetch(\"http://localhost:8080/tip\",{\n      method:'post',\n      headers: {\n        \"Content-Type\":\"application/json\"\n      },\n      body: JSON.stringify({\n        date:date,\n        tipAmount:tipAmount,\n        savingsRate:savingsRate,\n        amountSaved:amountSaved\n      })\n    }).then(()=>{\n       props.fetchTips();\n       setDate(\"\");\n       setTipAmount(\"\");\n       setSavingsRate(\"\");\n       setAmountSaved(\"\")\n       props.history.push('/tips')\n    })\n  }\n\n  const handleUpdateTip=()=>{\n    fetch(\"http://localhost:8080/tip/\" + id,{\n      method:'put',\n      headers: {\n        \"Content-Type\":\"application/json\"\n      },\n      body: JSON.stringify({\n        date: date,\n        tipAmount: tipAmount,\n        savingsRate: savingsRate,\n        amountSaved: amountSaved\n      })\n    }).then(()=>{\n       props.fetchTips();\n       setId(0);\n       setDate(\"\");\n       setTipAmount(\"\");\n       setSavingsRate(\"\");\n       setAmountSaved(\"\");\n       props.history.push('/tips')\n    })\n  }\n  React.useEffect(()=>{\n    let id = props.match ? props.match.params.id :0\n    setId(id);\n  },[])\n  let buttonAction;\n  if (id){\n    buttonAction = <button onClick={handleUpdateTip}>Update Tip</button>\n  } else {\n    buttonAction = <button onClick={handleCreateTip}>Add Tip</button>\n  }\n  return(\n    <div>\n      <div className={classes.root}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Grid container justify=\"space-around\">\n            <KeyboardDatePicker\n              margin=\"normal\"\n              id=\"date-picker-dialog\"\n              label=\"Date picker dialog\"\n              format=\"MM/dd/yyyy\"\n              value={date}\n              onChange={onDateInput}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n            </Grid>\n        </MuiPickersUtilsProvider>\n\n        <TextField\n          id=\"outlined-adornment-amount\"\n          className={clsx(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          label=\"Tip Amount\"\n          value={values.tipAmount}\n          onChange={handleChange('tipAmount')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n          }}\n        />\n\n        <TextField\n          select\n          className={clsx(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          label=\"Savings Rate\"\n          value={values.savingsRate}\n          onChange={handleChange('savingsRate')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\n          }}\n        >\n          {ranges.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n\n        </TextField>\n\n        <TextField\n          id=\"outlined-adornment-amount\"\n          className={clsx(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          label=\"Amount to Save\"\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">${Math.ceil(values.tipAmount*values.savingsRate)}</InputAdornment>,\n          }}\n        />\n        <TextField\n          id=\"outlined-adornment-amount\"\n          className={clsx(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          label=\"Actual Amount Saved\"\n          value={values.amountSaved}\n          onChange={handleChange('amount')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n          }}\n        />\n        </div>\n      );\n      {buttonAction}\n    </div>\n  )}\nexport default TipForm\n"]},"metadata":{},"sourceType":"module"}