{"ast":null,"code":"import _slicedToArray from \"/Users/vanes/Desktop/dailyTipOut/tipoutapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vanes/Desktop/dailyTipOut/tipoutapp/src/components/TipForm.js\";\nimport React from 'react';\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Fab from '@material-ui/core/Fab';\n\nconst TipForm = props => {\n  const ranges = [{\n    value: '.15',\n    label: '15%'\n  }, {\n    value: '.2',\n    label: '20%'\n  }, {\n    value: '.25',\n    label: '25%'\n  }];\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    margin: {\n      margin: theme.spacing(2)\n    },\n    textField: {\n      flexBasis: 200\n    }\n  }));\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        id = _React$useState2[0],\n        setId = _React$useState2[1];\n\n  const _React$useState3 = React.useState(new Date()),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        date = _React$useState4[0],\n        setDate = _React$useState4[1];\n\n  const _React$useState5 = React.useState(\"\"),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        tipAmount = _React$useState6[0],\n        setTipAmount = _React$useState6[1];\n\n  const _React$useState7 = React.useState(\"\"),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        savingsRate = _React$useState8[0],\n        setSavingsRate = _React$useState8[1];\n\n  const _React$useState9 = React.useState(\"\"),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        amountSaved = _React$useState10[0],\n        setAmountSaved = _React$useState10[1];\n\n  const onIdInput = e => {\n    setId(e.target.value);\n  };\n\n  const onDateInput = date => {\n    setDate(date);\n  };\n\n  const onTipAmountInput = e => {\n    setTipAmount(e.target.value);\n  };\n\n  const onSavingsRateInput = e => {\n    setSavingsRate(e.target.value);\n  };\n\n  const onAmountSavedInput = e => {\n    setAmountSaved(e.target.value);\n  };\n\n  const handleCreateTip = () => {\n    fetch(\"http://localhost:8080/tip\", {\n      method: 'post',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: date,\n        tipAmount: tipAmount,\n        savingsRate: savingsRate,\n        amountSaved: amountSaved\n      })\n    }).then(() => {\n      props.fetchTips();\n      setDate(\"\");\n      setTipAmount(\"\");\n      setSavingsRate(\"\");\n      setAmountSaved(\"\");\n      props.history.push('/tips');\n    });\n  };\n\n  const handleUpdateTip = () => {\n    fetch(\"http://localhost:8080/tip/\" + id, {\n      method: 'put',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: date,\n        tipAmount: tipAmount,\n        savingsRate: savingsRate,\n        amountSaved: amountSaved\n      })\n    }).then(() => {\n      props.fetchTips();\n      setId(0);\n      setDate(\"\");\n      setTipAmount(\"\");\n      setSavingsRate(\"\");\n      setAmountSaved(\"\");\n      props.history.push('/tips');\n    });\n  };\n\n  React.useEffect(() => {\n    let id = props.match ? props.match.params.id : 0;\n    setId(id);\n  }, []);\n  let buttonAction;\n\n  if (id) {\n    buttonAction = React.createElement(Fab, {\n      \"aria-label\": \"save\",\n      className: classes.fab,\n      onClick: handleUpdateTip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(SaveIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }));\n  } else {\n    buttonAction = React.createElement(Fab, {\n      \"aria-label\": \"save\",\n      className: classes.fab,\n      onClick: handleCreateTip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(SaveIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    inputVariant: \"outlined\",\n    margin: \"normal\",\n    id: \"date-picker-dialog\",\n    label: \"Date\",\n    format: \"MM/dd/yyyy\",\n    value: date,\n    onChange: onDateInput,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(TextField, {\n    id: \"outlined-adornment-amount\",\n    className: clsx(classes.margin, classes.textField),\n    variant: \"outlined\",\n    label: \"Tip Amount\",\n    value: tipAmount,\n    onChange: onTipAmountInput,\n    InputProps: {\n      startAdornment: React.createElement(InputAdornment, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"$\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    select: true,\n    className: clsx(classes.margin, classes.textField),\n    variant: \"outlined\",\n    label: \"Savings Rate\",\n    value: savingsRate,\n    onChange: onSavingsRateInput,\n    InputProps: {\n      startAdornment: React.createElement(InputAdornment, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"%\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, ranges.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, option.label))), React.createElement(TextField, {\n    error: true,\n    id: \"outlined-adornment-amount\",\n    className: clsx(classes.margin, classes.textField),\n    variant: \"outlined\",\n    label: \"Amount to Save\",\n    InputProps: {\n      startAdornment: React.createElement(InputAdornment, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"$\", Math.ceil(tipAmount * savingsRate))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-adornment-amount\",\n    className: clsx(classes.margin, classes.textField),\n    variant: \"outlined\",\n    label: \"Actual Amount Saved\",\n    value: amountSaved,\n    onChange: onAmountSavedInput,\n    InputProps: {\n      startAdornment: React.createElement(InputAdornment, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"$\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), buttonAction));\n};\n\nexport default TipForm;","map":{"version":3,"sources":["/Users/vanes/Desktop/dailyTipOut/tipoutapp/src/components/TipForm.js"],"names":["React","Grid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","clsx","makeStyles","InputAdornment","TextField","MenuItem","SaveIcon","Fab","TipForm","props","ranges","value","label","useStyles","theme","root","display","flexWrap","margin","spacing","textField","flexBasis","classes","useState","id","setId","Date","date","setDate","tipAmount","setTipAmount","savingsRate","setSavingsRate","amountSaved","setAmountSaved","onIdInput","e","target","onDateInput","onTipAmountInput","onSavingsRateInput","onAmountSavedInput","handleCreateTip","fetch","method","headers","body","JSON","stringify","then","fetchTips","history","push","handleUpdateTip","useEffect","match","params","buttonAction","fab","startAdornment","map","option","Math","ceil"],"mappings":"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","sourcesContent":["import React from 'react'\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Fab from '@material-ui/core/Fab';\n\n\n\nconst TipForm=(props)=>{\n  const ranges = [\n    {\n      value: '.15',\n      label: '15%',\n    },\n    {\n      value: '.2',\n      label: '20%',\n    },\n    {\n      value: '.25',\n      label: '25%',\n    },\n  ];\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(2),\n    },\n    textField: {\n      flexBasis: 200,\n    },\n  }));\n\n  const classes = useStyles();\n\n  const [id, setId] = React.useState(0);\n  const [date, setDate] = React.useState(new Date());\n  const [tipAmount, setTipAmount] = React.useState(\"\");\n  const [savingsRate, setSavingsRate] = React.useState(\"\");\n  const [amountSaved, setAmountSaved] = React.useState(\"\");\n\n  const onIdInput=(e)=>{\n    setId(e.target.value);\n  }\n  const onDateInput=(date)=>{\n    setDate(date);\n  }\n  const onTipAmountInput=(e)=>{\n    setTipAmount(e.target.value);\n  }\n  const onSavingsRateInput=(e)=>{\n    setSavingsRate(e.target.value);\n  }\n  const onAmountSavedInput=(e)=>{\n    setAmountSaved(e.target.value);\n  }\n\n  const handleCreateTip=()=>{\n    fetch(\"http://localhost:8080/tip\",{\n      method:'post',\n      headers: {\n        \"Content-Type\":\"application/json\"\n      },\n      body: JSON.stringify({\n        date:date,\n        tipAmount:tipAmount,\n        savingsRate:savingsRate,\n        amountSaved:amountSaved\n      })\n    }).then(()=>{\n       props.fetchTips();\n       setDate(\"\");\n       setTipAmount(\"\");\n       setSavingsRate(\"\");\n       setAmountSaved(\"\")\n       props.history.push('/tips')\n    })\n  }\n\n  const handleUpdateTip=()=>{\n    fetch(\"http://localhost:8080/tip/\" + id,{\n      method:'put',\n      headers: {\n        \"Content-Type\":\"application/json\"\n      },\n      body: JSON.stringify({\n        date: date,\n        tipAmount: tipAmount,\n        savingsRate: savingsRate,\n        amountSaved: amountSaved\n      })\n    }).then(()=>{\n       props.fetchTips();\n       setId(0);\n       setDate(\"\");\n       setTipAmount(\"\");\n       setSavingsRate(\"\");\n       setAmountSaved(\"\");\n       props.history.push('/tips')\n    })\n  }\n  React.useEffect(()=>{\n    let id = props.match ? props.match.params.id :0\n    setId(id);\n  },[])\n  let buttonAction;\n  if (id){\n    buttonAction =     <Fab aria-label=\"save\" className={classes.fab} onClick={handleUpdateTip}>\n          <SaveIcon />\n        </Fab>\n  } else {\n    buttonAction = <Fab aria-label=\"save\" className={classes.fab} onClick={handleCreateTip}>\n          <SaveIcon />\n        </Fab>\n\n  }\n  return(\n    <div className={classes.root}>\n\n        <Grid container  direction=\"column\" alignItems=\"center\" spacing={3}>\n\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  inputVariant=\"outlined\"\n                  margin=\"normal\"\n                  id=\"date-picker-dialog\"\n                  label=\"Date\"\n                  format=\"MM/dd/yyyy\"\n                  value={date}\n                  onChange={onDateInput}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n            </MuiPickersUtilsProvider>\n\n            <TextField\n              id=\"outlined-adornment-amount\"\n              className={clsx(classes.margin, classes.textField)}\n              variant=\"outlined\"\n              label=\"Tip Amount\"\n              value={tipAmount}\n              onChange={onTipAmountInput}\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n              }}\n            />\n\n            <TextField\n              select\n              className={clsx(classes.margin, classes.textField)}\n              variant=\"outlined\"\n              label=\"Savings Rate\"\n              value={savingsRate}\n              onChange={onSavingsRateInput}\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\n              }}\n            >\n              {ranges.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n\n            <TextField\n              error\n              id=\"outlined-adornment-amount\"\n              className={clsx(classes.margin, classes.textField)}\n              variant=\"outlined\"\n              label=\"Amount to Save\"\n\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">${Math.ceil(tipAmount*savingsRate)}</InputAdornment>,\n              }}\n            />\n\n            <TextField\n              id=\"outlined-adornment-amount\"\n              className={clsx(classes.margin, classes.textField)}\n              variant=\"outlined\"\n              label=\"Actual Amount Saved\"\n              value={amountSaved}\n              onChange={onAmountSavedInput}\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n              }}\n            />\n\n          {buttonAction}\n\n        </Grid>\n    </div>\n  )\n}\nexport default TipForm\n"]},"metadata":{},"sourceType":"module"}