{"ast":null,"code":"import _slicedToArray from \"/Users/vanes/Desktop/dailyTipOut/tipoutapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vanes/Desktop/dailyTipOut/tipoutapp/src/components/TipForm.js\";\nimport React from 'react';\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport cyan from '@material-ui/core/colors/cyan';\nconst primary = cyan[900];\n\nconst TipForm = props => {\n  const ranges = [{\n    value: '.15',\n    label: '15%'\n  }, {\n    value: '.2',\n    label: '20%'\n  }, {\n    value: '.25',\n    label: '25%'\n  }];\n  const useStyles = makeStyles(theme => ({\n    textField: {\n      flexBasis: 100\n    },\n    container: {\n      display: 'flex'\n    }\n  }));\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        id = _React$useState2[0],\n        setId = _React$useState2[1];\n\n  const _React$useState3 = React.useState(new Date()),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        date = _React$useState4[0],\n        setDate = _React$useState4[1];\n\n  const _React$useState5 = React.useState(\"\"),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        tipAmount = _React$useState6[0],\n        setTipAmount = _React$useState6[1];\n\n  const _React$useState7 = React.useState(\"\"),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        savingsRate = _React$useState8[0],\n        setSavingsRate = _React$useState8[1];\n\n  const _React$useState9 = React.useState(\"\"),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        amountSaved = _React$useState10[0],\n        setAmountSaved = _React$useState10[1];\n\n  const onIdInput = e => {\n    setId(e.target.value);\n  };\n\n  const onDateInput = date => {\n    setDate(date);\n  };\n\n  const onTipAmountInput = e => {\n    setTipAmount(e.target.value);\n  };\n\n  const onSavingsRateInput = e => {\n    setSavingsRate(e.target.value);\n  };\n\n  const onAmountSavedInput = e => {\n    setAmountSaved(e.target.value);\n  };\n\n  const handleCreateTip = () => {\n    fetch(\"http://localhost:8080/tip\", {\n      method: 'post',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: date,\n        tipAmount: tipAmount,\n        savingsRate: savingsRate,\n        amountSaved: amountSaved\n      })\n    }).then(() => {\n      props.fetchTips();\n      setDate(\"\");\n      setTipAmount(\"\");\n      setSavingsRate(\"\");\n      setAmountSaved(\"\");\n      props.history.push('/tips');\n    });\n  };\n\n  const handleUpdateTip = () => {\n    fetch(\"http://localhost:8080/tip/\" + id, {\n      method: 'put',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: date,\n        tipAmount: tipAmount,\n        savingsRate: savingsRate,\n        amountSaved: amountSaved\n      })\n    }).then(() => {\n      props.fetchTips();\n      setId(0);\n      setDate(\"\");\n      setTipAmount(\"\");\n      setSavingsRate(\"\");\n      setAmountSaved(\"\");\n      props.history.push('/tips');\n    });\n  };\n\n  React.useEffect(() => {\n    let id = props.match ? props.match.params.id : 0;\n    setId(id);\n  }, []);\n  let buttonAction;\n\n  if (id) {\n    buttonAction = React.createElement(Button, {\n      onClick: handleUpdateTip,\n      variant: \"contained\",\n      style: {\n        background: '#0a4c4a'\n      },\n      size: \"large\",\n      className: classes.button,\n      startIcon: React.createElement(SaveIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Save\");\n  } else {\n    buttonAction = React.createElement(Button, {\n      onClick: handleCreateTip,\n      variant: \"contained\",\n      style: {\n        background: '#0a4c4a'\n      },\n      size: \"large\",\n      className: classes.button,\n      startIcon: React.createElement(SaveIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Save\");\n  }\n\n  return React.createElement(Grid, {\n    container: true,\n    className: \"formContainer\",\n    direction: \"column\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    className: classes.textField,\n    inputVariant: \"outlined\",\n    margin: \"normal\",\n    id: \"date-picker-dialog\",\n    label: \"Date\",\n    format: \"MM/dd/yyyy\",\n    value: date,\n    onChange: onDateInput,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  })), React.createElement(TextField, {\n    id: \"outlined-adornment-\",\n    className: classes.textField,\n    variant: \"outlined\",\n    label: \"Tip Amount\",\n    value: tipAmount,\n    onChange: onTipAmountInput,\n    InputProps: {\n      startAdornment: React.createElement(InputAdornment, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"$\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    select: true,\n    className: classes.textField,\n    variant: \"outlined\",\n    label: \"Savings Rate\",\n    value: savingsRate,\n    onChange: onSavingsRateInput,\n    InputProps: {\n      startAdornment: React.createElement(InputAdornment, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"%\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, ranges.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, option.label))), React.createElement(TextField, {\n    error: true,\n    id: \"outlined-adornment-amount\",\n    className: classes.textField,\n    variant: \"outlined\",\n    label: \"Amount to Save\",\n    InputProps: {\n      startAdornment: React.createElement(InputAdornment, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"$\", Math.ceil(tipAmount * savingsRate))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    id: \"outlined-adornment-amount\",\n    className: classes.textField,\n    variant: \"outlined\",\n    label: \"Actual Amount Saved\",\n    value: amountSaved,\n    onChange: onAmountSavedInput,\n    InputProps: {\n      startAdornment: React.createElement(InputAdornment, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"$\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }), buttonAction);\n};\n\nexport default TipForm;","map":{"version":3,"sources":["/Users/vanes/Desktop/dailyTipOut/tipoutapp/src/components/TipForm.js"],"names":["React","Grid","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","clsx","makeStyles","InputAdornment","TextField","MenuItem","SaveIcon","Button","Icon","cyan","primary","TipForm","props","ranges","value","label","useStyles","theme","textField","flexBasis","container","display","classes","useState","id","setId","Date","date","setDate","tipAmount","setTipAmount","savingsRate","setSavingsRate","amountSaved","setAmountSaved","onIdInput","e","target","onDateInput","onTipAmountInput","onSavingsRateInput","onAmountSavedInput","handleCreateTip","fetch","method","headers","body","JSON","stringify","then","fetchTips","history","push","handleUpdateTip","useEffect","match","params","buttonAction","background","button","startAdornment","map","option","Math","ceil"],"mappings":"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","sourcesContent":["import React from 'react'\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport cyan from '@material-ui/core/colors/cyan';\n\nconst primary = cyan[900];\n\n\n\nconst TipForm=(props)=>{\n  const ranges = [\n    {\n      value: '.15',\n      label: '15%',\n    },\n    {\n      value: '.2',\n      label: '20%',\n    },\n    {\n      value: '.25',\n      label: '25%',\n    },\n  ];\n\n  const useStyles = makeStyles(theme => ({\n    textField: {\n      flexBasis: 100,\n    },\n    container: {\n      display: 'flex',\n    }\n\n  }));\n\n  const classes = useStyles();\n\n  const [id, setId] = React.useState(0);\n  const [date, setDate] = React.useState(new Date());\n  const [tipAmount, setTipAmount] = React.useState(\"\");\n  const [savingsRate, setSavingsRate] = React.useState(\"\");\n  const [amountSaved, setAmountSaved] = React.useState(\"\");\n\n  const onIdInput=(e)=>{\n    setId(e.target.value);\n  }\n  const onDateInput=(date)=>{\n    setDate(date);\n  }\n  const onTipAmountInput=(e)=>{\n    setTipAmount(e.target.value);\n  }\n  const onSavingsRateInput=(e)=>{\n    setSavingsRate(e.target.value);\n  }\n  const onAmountSavedInput=(e)=>{\n    setAmountSaved(e.target.value);\n  }\n\n  const handleCreateTip=()=>{\n    fetch(\"http://localhost:8080/tip\",{\n      method:'post',\n      headers: {\n        \"Content-Type\":\"application/json\"\n      },\n      body: JSON.stringify({\n        date:date,\n        tipAmount:tipAmount,\n        savingsRate:savingsRate,\n        amountSaved:amountSaved\n      })\n    }).then(()=>{\n       props.fetchTips();\n       setDate(\"\");\n       setTipAmount(\"\");\n       setSavingsRate(\"\");\n       setAmountSaved(\"\")\n       props.history.push('/tips')\n    })\n  }\n\n  const handleUpdateTip=()=>{\n    fetch(\"http://localhost:8080/tip/\" + id,{\n      method:'put',\n      headers: {\n        \"Content-Type\":\"application/json\"\n      },\n      body: JSON.stringify({\n        date: date,\n        tipAmount: tipAmount,\n        savingsRate: savingsRate,\n        amountSaved: amountSaved\n      })\n    }).then(()=>{\n       props.fetchTips();\n       setId(0);\n       setDate(\"\");\n       setTipAmount(\"\");\n       setSavingsRate(\"\");\n       setAmountSaved(\"\");\n       props.history.push('/tips')\n    })\n  }\n  React.useEffect(()=>{\n    let id = props.match ? props.match.params.id :0\n    setId(id);\n  },[])\n  let buttonAction;\n  if (id){\n    buttonAction =\n      <Button\n        onClick={handleUpdateTip}\n        variant=\"contained\"\n        style={{background:'#0a4c4a'}}\n        size=\"large\"\n        className={classes.button}\n        startIcon={<SaveIcon />}\n      >\n        Save\n      </Button>\n  } else {\n    buttonAction =\n        <Button\n          onClick={handleCreateTip}\n          variant=\"contained\"\n          style={{background:'#0a4c4a'}}\n          size=\"large\"\n          className={classes.button}\n          startIcon={<SaveIcon />}\n        >\n          Save\n        </Button>\n  }\n  return(\n    <Grid container className=\"formContainer\" direction=\"column\" alignItems=\"center\">\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  className={classes.textField}\n                  inputVariant=\"outlined\"\n                  margin=\"normal\"\n                  id=\"date-picker-dialog\"\n                  label=\"Date\"\n                  format=\"MM/dd/yyyy\"\n                  value={date}\n                  onChange={onDateInput}\n                  KeyboardButtonProps={{\n                    'aria-label': 'change date',\n                  }}\n                />\n            </MuiPickersUtilsProvider>\n            <TextField\n              id=\"outlined-adornment-\"\n              className={classes.textField}\n              variant=\"outlined\"\n              label=\"Tip Amount\"\n              value={tipAmount}\n              onChange={onTipAmountInput}\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n              }}\n            />\n            <TextField\n              select\n              className={classes.textField}\n              variant=\"outlined\"\n              label=\"Savings Rate\"\n              value={savingsRate}\n              onChange={onSavingsRateInput}\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\n              }}\n            >\n              {ranges.map(option => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </TextField>\n            <TextField\n              error\n              id=\"outlined-adornment-amount\"\n              className={classes.textField}\n              variant=\"outlined\"\n              label=\"Amount to Save\"\n\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">${Math.ceil(tipAmount*savingsRate)}</InputAdornment>,\n              }}\n            />\n            <TextField\n              required\n              id=\"outlined-adornment-amount\"\n              className={classes.textField}\n              variant=\"outlined\"\n              label=\"Actual Amount Saved\"\n              value={amountSaved}\n              onChange={onAmountSavedInput}\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n              }}\n            />\n          {buttonAction}\n    </Grid>\n  )\n}\nexport default TipForm\n"]},"metadata":{},"sourceType":"module"}